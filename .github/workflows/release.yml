name: Release

on:
  push:
    tags:
      - '*'

jobs:
  build-prod:
    name: Build release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: setup node and pnpm
        uses: dafnik/setup-node-pnpm@v1
        with:
          install: true

      - name: build
        run: |
          pnpm ngcc # Run npm-script ngcc, if ng build does it, the ci breaks (not enough memory)
          pnpm build:prod

      - uses: actions/upload-artifact@master
        name: upload artifact
        with:
          name: DatePoll-Frontend-prod
          path: ./dist/DatePoll-Frontend
          retention-days: 1

  deploy-prod:
    name: Deploy prod
    runs-on: ubuntu-latest
    needs: [build-prod]
    steps:
      - uses: actions/checkout@master

      - name: setup node and pnpm
        uses: dafnik/setup-node-pnpm@v1

      - uses: actions/download-artifact@master
        with:
          name: DatePoll-Frontend-prod
          path: ./dist/DatePoll-Frontend

      - name: get version
        id: get-version
        shell: bash
        run: echo "VERSION=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: zipping
        shell: bash
        run: |
          mkdir releases
          cd dist/
          zip -r "DatePoll-Frontend-latest.zip" ./WaiterRobot-Web >> /dev/null
          zip -r "DatePoll-Frontend-v${{ steps.get-version.outputs.VERSION }}.zip" ./WaiterRobot-Web >> /dev/null
          cd -
          mv "./dist/DatePoll-Frontend-latest.zip" ./releases
          mv "./dist/DatePoll-Frontend-v${{ steps.get-version.outputs.VERSION }}.zip" ./releases

      - name: releases lookup
        run: |
          cd releases
          ls -la
          cd -

      - name: move zips to release server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: ./releases
          remote: /var/www/datepoll-share/DatePoll/Frontend-Releases
          host: ${{ secrets.RELEASES_SSH_HOST }}
          port: ${{ secrets.RELEASES_SSH_PORT }}
          username: ${{ secrets.RELEASES_SSH_USER }}
          privateKey: ${{ secrets.RELEASES_SSH_PRIVATE_KEY }}